/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AnalyzerGui.java
 *
 * Created on 19.05.2011, 11:46:35
 */
package knowledge;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import knowledge.fuzzyrepresentation.Individual;

/**
 *
 * @author jahrralf
 */
public class AnalyzerGui extends javax.swing.JFrame {

    /**
     * Creates new form AnalyzerGui
     */
    public AnalyzerGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        individuals = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        distances = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        pareto = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        classification = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        wekainput = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        pareto_csv = new javax.swing.JTextPane();
        jToolBar1 = new javax.swing.JToolBar();
        jSlider1 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AnalyzerGui");
        setMinimumSize(new java.awt.Dimension(800, 480));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jScrollPane1.setViewportView(individuals);

        jTabbedPane1.addTab("Individuals", jScrollPane1);

        jScrollPane2.setViewportView(distances);

        jTabbedPane1.addTab("Distances", jScrollPane2);

        jScrollPane3.setViewportView(pareto);

        jTabbedPane1.addTab("Pareto without gaps", jScrollPane3);

        jScrollPane4.setViewportView(classification);

        jTabbedPane1.addTab("Classification", jScrollPane4);

        jScrollPane5.setViewportView(wekainput);

        jTabbedPane1.addTab("Weka input", jScrollPane5);

        jScrollPane6.setViewportView(pareto_csv);

        jTabbedPane1.addTab("Pareto CSV", jScrollPane6);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jToolBar1.setRollover(true);

        jSlider1.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jSlider1.setMajorTickSpacing(10);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(33);
        jToolBar1.add(jSlider1);

        jButton1.setBackground(new java.awt.Color(255, 0, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Run!");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setMargin(new java.awt.Insets(2, 25, 2, 25));
        jButton1.setMaximumSize(new java.awt.Dimension(29, 100));
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);
        getContentPane().add(jTextField1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    }//GEN-LAST:event_formWindowClosed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        BufferedWriter bw = null;
        try {
            final JFileChooser fc = new JFileChooser();
            int returnVal = fc.showOpenDialog(this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                // Get input file from file selector
                File input = fc.getSelectedFile();
                File[] input_files = {input};
                
                System.out.println("Input file: " + input.getAbsolutePath());

                /*
                 * File[] input_files = new File[input_strings.length]; for (int
                 * i = 0; i < input_strings.length; i++) { input_files[i] = new
                 * File(input_strings[i]); }
                 */

                // IMPORTANT!!!
                // Define number of objectives
                Individual.setObjectiveCount(2);
                
                // IMPORTANT!!!
                // Defines if the individuals have a benchmark column which is not important and is hence skipped in the output
                Individual.setHasBenchmark(false);

                // IMPORTANT!!!
                // Define the set of interesting obejctives ({0,1} for two objectives)
                int[][] objective_sets = {{0,1}}; // {{1, 2}, {2, 3}}; // energy, filesize, cycles, ctime

                for (int[] objectives : objective_sets) {
                    // Run analysis
                    Analyzer.runAllTasks(this, input_files, (double) jSlider1.getValue() / 100, objectives);

                    // CLASSIFICATION: Calculate output file path
                    String output_name = input.getAbsolutePath().replace(".csv", "") + "_" + jSlider1.getValue() + ".csv";

                    // CLASSIFICATION: Write output 
                    File output = new File(output_name);
                    bw = new BufferedWriter(new FileWriter(output));
                    bw.append(this.classification.getText());
                    bw.close();
                    
                    System.out.println("CLASSIFICATION was written to " + output.getAbsolutePath());

                    // PARETO: Calculate output file path
                    output_name = input.getAbsolutePath().replace(".csv", "") + "_pareto_" + objectives[0] + "-" + objectives[1] + ".csv";

                    // PARETO: Write output
                    output = new File(output_name);
                    bw = new BufferedWriter(new FileWriter(output));
                    bw.append(this.pareto_csv.getText());
                    bw.close();

                    System.out.println("PARETO was written to " + output.getAbsolutePath());
                }
            } else {
                System.out.println("No File was selected.");
            }
        } catch (Exception ex) {
            Logger.getLogger(AnalyzerGui.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (bw != null) {
                    bw.close();
                }
            } catch (IOException ex) {
                Logger.getLogger(AnalyzerGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AnalyzerGui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextPane classification;
    public javax.swing.JTextPane distances;
    public javax.swing.JTextPane individuals;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSlider jSlider1;
    public javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    public javax.swing.JTextPane pareto;
    public javax.swing.JTextPane pareto_csv;
    public javax.swing.JTextPane wekainput;
    // End of variables declaration//GEN-END:variables
}
